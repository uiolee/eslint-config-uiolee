name: CI

on:
  push:
    branches:
      - "main"
    paths:
      - "src"
      - "package.json"
      - "tsconfig.json"
      - ".github/workflows/ci.yml"
  pull_request:
    paths:
      - "src"
      - "scripts/**"
      - "package.json"
      - "tsconfig.json"
      - ".github/workflows/ci.yml"

env:
  default_node_version: "lts/*"
  default_pnpm_version: "latest"
  artifact_name: build_${{ github.sha }}

jobs:
  build:
    name: Build
    uses: ./.github/workflows/build.yml

  check-types:
    name: Type Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5

      - uses: pnpm/action-setup@v4
        name: Install pnpm
        with:
          version: ${{env.default_pnpm_version}}

      - uses: actions/setup-node@v4
        with:
          node-version: ${{env.default_node_version}}
          cache: pnpm

      - name: Install Dependencies
        run: pnpm i

      - name: Type Check
        run: |
          pnpm run check-types

  lint:
    name: ESLint
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5

      - uses: actions/download-artifact@v5
        with:
          name: ${{ env.artifact_name }}

      - uses: pnpm/action-setup@v4
        name: Install pnpm
        with:
          version: ${{env.default_pnpm_version}}

      - uses: actions/setup-node@v4
        with:
          node-version: ${{env.default_node_version}}
          cache: pnpm

      - name: Install Dependencies
        run: pnpm i

      - name: ESLint
        run: |
          pnpm run lint

  release-please:
    needs: build
    if: ${{ github.event_name == 'push' && github.ref_name == 'main'}}
    runs-on: ubuntu-latest
    permissions:
      contents: write       # release-please-action
      pull-requests: write  # release-please-action
      id-token: write       # npm publish --provenance
    steps:
      - uses: googleapis/release-please-action@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          release-type: node

      - uses: actions/checkout@v5
        if: ${{ steps.release.outputs.release_created }}
        with:
          submodules: "recursive"

      - uses: actions/download-artifact@v5
        if: ${{ steps.release.outputs.release_created }}
        with:
          name: ${{ env.artifact_name }}

      - uses: actions/setup-node@v4
        if: ${{ steps.release.outputs.release_created }}
        with:
          registry-url: 'https://registry.npmjs.org'

      - run: npm publish --provenance --access public --registry=https://registry.npmjs.org/
        if: ${{ steps.release.outputs.release_created }}
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}
  # test:
  #   name: Test
  #   needs:
  #     - build
  #     - check-types
  #   runs-on: ${{ matrix.os }}
  #   strategy:
  #     matrix:
  #       os: [ubuntu-latest, windows-latest, macos-latest]
  #     fail-fast: false
  #   steps:
  #     - uses: actions/checkout@v5

  #     - uses: actions/download-artifact@v5
  #       with:
  #         name: ${{ env.artifact_name }}

  #     - uses: pnpm/action-setup@v4
  #       name: Install pnpm
  #       with:
  #         version: ${{env.default_pnpm_version}}

  #     - uses: actions/setup-node@v4
  #       with:
  #         node-version: ${{env.default_node_version}}
  #         cache: pnpm

  #     - name: Install Dependencies
  #       run: pnpm i

  #     - name: Test
  #       run: |
  #         pnpm run test
